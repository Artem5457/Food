{"version":3,"sources":["ModalWindow/ModalWindow.tsx","api/recipe.ts","Loader/Loader.tsx","Card/Card.tsx","ListOfRecipes/RecipeCard.tsx","ListOfRecipes/ListOfRecipes.tsx","ListOfMyRecipes/MyRecipeCard.tsx","ListOfMyRecipes/ListOfMyRecipes.tsx","App.tsx","index.tsx"],"names":["ModalWindow","addDishStatus","closeWindow","addMyRecipe","useState","title","setTitle","instruction","setInstruction","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","align","className","onSubmit","event","preventDefault","id","Date","strArea","strInstructions","type","name","placeholder","required","value","onChange","currentTarget","rows","getRecipe","fetch","then","response","ok","Error","status","json","Loader","Card","addRecipe","recipes","idMeal","strCategory","strMealThumb","strYoutube","strSource","recipe","setRecipe","loadingStatus","setLoadingStatus","useEffect","gotRecipe","meals","style","height","width","src","alt","onClick","newRecipe","length","RecipeCard","href","color","ListOfRecipes","ourRecipes","map","MyRecipeCard","yourRecipe","ListOfMyRecipes","yourRecipes","App","gotRecipes","localStorage","getItem","JSON","parse","gotMyRecipes","setAddDishStatus","setRecipes","myRecipes","setMyRecipes","to","path","element","find","el","setItem","stringify","myRec","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAYaA,EAA+B,SAAC,GAItC,IAHLC,EAGI,EAHJA,cACAC,EAEI,EAFJA,YACAC,EACI,EADJA,YAEA,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAiBA,OACE,8BACE,eAACC,EAAA,EAAD,CAAQC,KAAMT,EAAeU,QAAST,EAAtC,UACE,cAACU,EAAA,EAAD,8BACA,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAmBC,MAAM,UAAzB,sGAIA,uBACEC,UAAU,kBAIVC,SA7BW,SAACC,GACpBA,EAAMC,iBAENhB,EACE,CACEiB,IAAK,IAAIC,KACTC,QAASjB,EACTkB,gBAAiBhB,IAIrBD,EAAS,IACTE,EAAe,KAYT,UAOE,uBACEQ,UAAU,sDAQVQ,KAAK,OACLC,KAAK,aACLC,YAAY,aACZC,UAAQ,EACRC,MAAOvB,EACPwB,SAAU,SAAAX,GACRZ,EAASY,EAAMY,cAAcF,UAGjC,0BACEZ,UAAU,6DAQVS,KAAK,SACLM,KAAM,GACNL,YAAY,sBACZC,UAAQ,EACRC,MAAOrB,EACPsB,SAAU,SAAAX,GACRV,EAAeU,EAAMY,cAAcF,UAGvC,qBACEZ,UAAU,6BADZ,SAOE,wBACEQ,KAAK,SACLR,UAAU,6EAFZ,2CC5FDgB,EAAY,WACvB,OAAOC,MAAM,GAAD,OAHC,uDAIVC,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,cAAkCH,EAASG,SAGnD,OAAOH,EAASI,WCNTC,G,MAAmB,kBAC9B,qBAAKxB,UAAU,SAAf,SACE,qBAAKA,UAAU,wBCKNyB,EAAwB,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QACjD,EAA4BvC,mBAC1B,CACEwC,OAAQ,IACRtB,QAAS,GACTuB,YAAa,GACbtB,gBAAiB,GACjBuB,aAAc,GACdC,WAAY,GACZC,UAAW,KARf,mBAAOC,EAAP,KAAeC,EAAf,KAWA,EAA0C9C,oBAAkB,GAA5D,mBAAO+C,EAAP,KAAsBC,EAAtB,KAUA,OARAC,qBAAU,WACRrB,IACGE,MAAK,SAAAoB,GACJJ,EAAUI,EAAUC,MAAM,IAC1BH,GAAiB,QAEpB,IAECD,EACM,cAAC,EAAD,IAIR,uBACEnC,UAAU,0DAQVwC,MAAO,CAAEC,OAAQ,eATnB,UAWE,sBACEzC,UAAU,iDAKVwC,MAAO,CAAEE,MAAO,SANlB,UAQE,qBACEC,IAA8B,OAAxBV,EAAOH,aACT,uBACAG,EAAOH,aACX9B,UAAU,8BAKV4C,IAAI,KAGN,sBAAK5C,UAAU,cAAf,UACE,qBAAIA,UAAU,8BAAd,UAKGiC,EAAO3B,QACP,IACA2B,EAAOJ,eAGV,qBACE7B,UAAU,+CADZ,SAOGiC,EAAO1B,kBAGV,sBAAKP,UAAU,MAAf,UACE,wBACEA,UAAU,sOAsBVQ,KAAK,SACLqC,QAAS,WACP7B,IACGE,MAAK,SAAA4B,GAAS,OAAIZ,EAAUY,EAAUP,MAAM,QA1BnD,kBA+BA,wBACEvC,UAAU,oNAqBVQ,KAAK,SACLqC,QAAS,WACPnB,EAAUO,IAxBd,2BAgCN,sBAAKjC,UAAU,gBAAf,uDAEG,IACA2B,EAAQoB,cCrJJC,EAA8B,SAAC,GAAgB,IAAdf,EAAa,EAAbA,OAC5C,OACE,mCACE,sBACEjC,UAAU,iDAKVwC,MAAO,CAAEE,MAAO,SANlB,UAQE,qBACEC,IAA8B,OAAxBV,EAAOH,aACT,uBACAG,EAAOH,aACX9B,UAAU,8BAKV4C,IAAI,KAGN,sBAAK5C,UAAU,cAAf,UACE,qBAAIA,UAAU,8BAAd,UAKGiC,EAAO3B,QACP,IACA2B,EAAOJ,eAGV,qBACE7B,UAAU,+CADZ,SAOGiC,EAAO1B,kBAEV,mBAAG0C,KAAMhB,EAAOD,UAAWQ,MAAO,CAAEU,MAAO,QAA3C,2BC1CGC,EAAiC,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAC/C,OACE,qCACE,oBACEpD,UAAU,8BADZ,gDAQA,oBAAIA,UAAU,uDAAd,SAQGoD,EAAWC,KAAI,SAAApB,GAAM,OACpB,6BAGE,cAAC,EAAD,CACEA,OAAQA,KAHLA,EAAO1B,0BCtBX+C,EAAgC,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAC9C,OACE,mCACE,sBACEvD,UAAU,iDAKVwC,MAAO,CAAEE,MAAO,SANlB,UAQE,qBACEC,IAAI,2CACJ3C,UAAU,8BAKV4C,IAAI,gBAGN,sBAAK5C,UAAU,cAAf,UACE,oBAAIA,UAAU,8BAAd,SAKGuD,EAAWjD,UAGd,qBACEN,UAAU,+CADZ,SAOGuD,EAAWhD,2BCpCXiD,EAAmC,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACjD,OACE,qCACE,oBACEzD,UAAU,8BADZ,yBAQA,oBAAIA,UAAU,uDAAd,SAQGyD,EAAYJ,KAAI,SAAApB,GAAM,OACrB,6BAGE,cAAC,EAAD,CACEsB,WAAYtB,KAHTA,EAAO7B,aCoJTsD,EApKO,WAEpB,IAAMC,EAAaC,aAAaC,QAAQ,cASlCT,EAPe,OAAfO,EACK,GAGFG,KAAKC,MAAMJ,GAMdK,EAAeJ,aAAaC,QAAQ,gBASpCJ,EAPiB,OAAjBO,EACK,GAGFF,KAAKC,MAAMC,GAMpB,EAA0C5E,oBAAS,GAAnD,mBAAOH,EAAP,KAAsBgF,EAAtB,KACA,EAA8B7E,mBAAmBgE,GAAjD,mBAAOzB,EAAP,KAAgBuC,EAAhB,KACA,EAAkC9E,mBAAqBqE,GAAvD,mBAAOU,EAAP,KAAkBC,EAAlB,KAkBA,OACE,qCACE,mCACE,sBACEpE,UAAU,sFADZ,UAWE,cAAC,IAAD,CACEqE,GAAG,IACHrE,UAAU,kKAFZ,yBAsBA,cAAC,IAAD,CACEqE,GAAG,cACHrE,UAAU,sJAFZ,wBAqBA,cAAC,IAAD,CACEqE,GAAG,iBACHrE,UAAU,6JAFZ,wBAsBA,wBACEQ,KAAK,SACLR,UAAU,8IAeV6C,QAAS,kBAAMoB,GAAkBhF,IAjBnC,gCAuBF,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqF,KAAK,IAAIC,QAAS,cAAC,EAAD,CAAM7C,UArHrB,SAACO,GACbN,EAAQ6C,MAAK,SAAAC,GAAE,OAAKA,EAAG7C,UAAYK,EAAOL,YAI9CsC,EAAW,GAAD,mBAAKvC,GAAL,CAAcM,KACxB2B,aAAac,QAAQ,aAAcZ,KAAKa,UAAL,sBAAmBhD,GAAnB,CAA4BM,QA+GJN,QAASyB,MAC9D,cAAC,IAAD,CAAOkB,KAAK,cAAcC,QAAS,cAAC,EAAD,CAAenB,WAAYA,MAC9D,cAAC,IAAD,CAAOkB,KAAK,iBAAiBC,QAAS,cAAC,EAAD,CAAiBd,YAAaA,YAIxE,cAAC,EAAD,CACExE,cAAeA,EACfC,YA9Hc,kBAAM+E,GAAiB,IA+HrC9E,YArHc,SAACyF,GACnBR,EAAa,GAAD,mBAAKD,GAAL,CAAgBS,KAC5BhB,aAAac,QAAQ,eAAgBZ,KAAKa,UAAL,sBAAmBR,GAAnB,CAA8BS,aCjDvEC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.5110789f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Dialog, DialogContent, DialogContentText, DialogTitle,\n} from '@mui/material';\nimport { MyRecipe } from '../types/recipe';\n\ntype Props = {\n  addDishStatus: boolean;\n  closeWindow: () => void;\n  addMyRecipe: (myRec: MyRecipe) => void\n};\n\nexport const ModalWindow: React.FC<Props> = ({\n  addDishStatus,\n  closeWindow,\n  addMyRecipe,\n}) => {\n  const [title, setTitle] = useState('');\n  const [instruction, setInstruction] = useState('');\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    addMyRecipe(\n      {\n        id: +new Date(),\n        strArea: title,\n        strInstructions: instruction,\n      },\n    );\n\n    setTitle('');\n    setInstruction('');\n  };\n\n  return (\n    <div>\n      <Dialog open={addDishStatus} onClose={closeWindow}>\n        <DialogTitle>Add custom dish</DialogTitle>\n        <DialogContent>\n          <DialogContentText align=\"justify\">\n            To add your recipe to this application,\n            please enter dish title and  recipe instruction.\n          </DialogContentText>\n          <form\n            className=\"\n              flex\n              flex-col\n            \"\n            onSubmit={handleSubmit}\n          >\n            <input\n              className=\"\n                py-1.5\n                px-3\n                my-3\n                bg-gray-200\n                outline-none\n                rounded\n              \"\n              type=\"text\"\n              name=\"dish-title\"\n              placeholder=\"Dish title\"\n              required\n              value={title}\n              onChange={event => {\n                setTitle(event.currentTarget.value);\n              }}\n            />\n            <textarea\n              className=\"\n                resize-none\n                py-1.5\n                px-3\n                bg-gray-200\n                outline-none\n                rounded\n              \"\n              name=\"recipe\"\n              rows={10}\n              placeholder=\"Dish description...\"\n              required\n              value={instruction}\n              onChange={event => {\n                setInstruction(event.currentTarget.value);\n              }}\n            />\n            <div\n              className=\"\n                flex\n                justify-center\n                pt-8\n              \"\n            >\n              <button\n                type=\"submit\"\n                className=\"\n                  bg-blue-500\n                  hover:bg-blue-700\n                  text-white\n                  font-bold\n                  py-2\n                  px-4\n                  rounded-full\"\n              >\n                Add custom dish\n              </button>\n            </div>\n          </form>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n","const apiURL = 'https://www.themealdb.com/api/json/v1/1/random.php';\n\nexport const getRecipe = () => {\n  return fetch(`${apiURL}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.status}`);\n      }\n\n      return response.json();\n    });\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport { getRecipe } from '../api/recipe';\nimport { Recipe } from '../types/recipe';\nimport { Loader } from '../Loader/Loader';\n\ntype Props = {\n  recipes: Recipe[];\n  addRecipe: (rec: Recipe) => void;\n};\n\nexport const Card: React.FC<Props> = ({ addRecipe, recipes }) => {\n  const [recipe, setRecipe] = useState<Recipe>(\n    {\n      idMeal: '0',\n      strArea: '',\n      strCategory: '',\n      strInstructions: '',\n      strMealThumb: '',\n      strYoutube: '',\n      strSource: '',\n    },\n  );\n  const [loadingStatus, setLoadingStatus] = useState<boolean>(true);\n\n  useEffect(() => {\n    getRecipe()\n      .then(gotRecipe => {\n        setRecipe(gotRecipe.meals[0]);\n        setLoadingStatus(false);\n      });\n  }, []);\n\n  if (loadingStatus) {\n    return (<Loader />);\n  }\n\n  return (\n    <main\n      className=\"\n        flex\n        flex-col\n        items-center\n        sm:py-24\n        xl:py-24\n        md:py-44\n      \"\n      style={{ height: 'max-content' }}\n    >\n      <div\n        className=\"\n        shadow-md\n        rounded-md\n        overflow-hidden\n        bg-white\"\n        style={{ width: '320px' }}\n      >\n        <img\n          src={(recipe.strMealThumb === null)\n            ? '/img/Placeholder.png'\n            : recipe.strMealThumb}\n          className=\"\n          rounded-lg\n          shadow-xl\n          mb-4\n        \"\n          alt=\"\"\n        />\n\n        <div className=\"text-center\">\n          <h5 className=\"\n          text-xl\n          font-semibold\n          mb-2\"\n          >\n            {recipe.strArea}\n            {' '}\n            {recipe.strCategory}\n          </h5>\n\n          <div\n            className=\"\n            mb-4\n            h-36\n            overflow-hidden\n            overflow-ellipsis\"\n          >\n            {recipe.strInstructions}\n          </div>\n\n          <div className=\"h10\">\n            <button\n              className=\"\n              bg-purple-500\n              text-white\n              font-bold\n              uppercase\n              text-xs\n              px-4\n              py-2\n              rounded\n              shadow\n              hover:shadow-md\n              bg-green-500\n              active:bg-green-700\n              hover:bg-red-700\n              outline-none\n              focus:outline-none\n              mr-1\n              mb-1\n              ease-linear\n              transition-all\n              duration-150\n            \"\n              type=\"button\"\n              onClick={() => {\n                getRecipe()\n                  .then(newRecipe => setRecipe(newRecipe.meals[0]));\n              }}\n            >\n              Skip\n            </button>\n            <button\n              className=\"\n              bg-purple-500\n              text-white\n              font-bold\n              uppercase\n              text-xs\n              px-4\n              py-2\n              rounded\n              shadow\n              hover:shadow-md\n              hover:bg-red-700\n              hover:scale-50\n              outline-none\n              focus:outline-none\n              mr-1\n              mb-1\n              ease-linear\n              transition-all\n              duration-150\n            \"\n              type=\"button\"\n              onClick={() => {\n                addRecipe(recipe);\n              }}\n            >\n              Like\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"pt-6 text-2xl\">\n        Counter of favourite recipes from catalog:\n        {' '}\n        {recipes.length}\n      </div>\n    </main>\n  );\n};\n","import React from 'react';\nimport { Recipe } from '../types/recipe';\n\ntype Props = {\n  recipe: Recipe;\n};\n\nexport const RecipeCard: React.FC<Props> = ({ recipe }) => {\n  return (\n    <>\n      <div\n        className=\"\n        shadow-md\n        rounded-md\n        overflow-hidden\n        bg-white\"\n        style={{ width: '320px' }}\n      >\n        <img\n          src={(recipe.strMealThumb === null)\n            ? '/img/Placeholder.png'\n            : recipe.strMealThumb}\n          className=\"\n          rounded-lg\n          shadow-xl\n          mb-4\n        \"\n          alt=\"\"\n        />\n\n        <div className=\"text-center\">\n          <h5 className=\"\n          text-xl\n          font-semibold\n          mb-2\"\n          >\n            {recipe.strArea}\n            {' '}\n            {recipe.strCategory}\n          </h5>\n\n          <div\n            className=\"\n            mb-4\n            h-36\n            overflow-hidden\n            overflow-ellipsis\"\n          >\n            {recipe.strInstructions}\n          </div>\n          <a href={recipe.strSource} style={{ color: 'blue' }}>\n            Link\n          </a>\n\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { Recipe } from '../types/recipe';\nimport { RecipeCard } from './RecipeCard';\n\ntype Props = {\n  ourRecipes: Recipe[],\n};\n\nexport const ListOfRecipes: React.FC<Props> = ({ ourRecipes }) => {\n  return (\n    <>\n      <h1\n        className=\"\n          text-center\n          pt-10\n          text-3xl\"\n      >\n        My favourite recipes from catalog:\n      </h1>\n      <ul className=\"\n        list-none\n        flex\n        flex-wrap\n        justify-center\n        my-16\n        gap-9\"\n      >\n        {ourRecipes.map(recipe => (\n          <li\n            key={recipe.strInstructions}\n          >\n            <RecipeCard\n              recipe={recipe}\n            />\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React from 'react';\nimport { MyRecipe } from '../types/recipe';\n\ntype Props = {\n  yourRecipe: MyRecipe;\n};\n\nexport const MyRecipeCard: React.FC<Props> = ({ yourRecipe }) => {\n  return (\n    <>\n      <div\n        className=\"\n        shadow-md\n        rounded-md\n        overflow-hidden\n        bg-white\"\n        style={{ width: '320px' }}\n      >\n        <img\n          src=\"https://i.ibb.co/FVkTVkF/Placeholder.png\"\n          className=\"\n          rounded-lg\n          shadow-xl\n          mb-4\n        \"\n          alt=\"Placeholder\"\n        />\n\n        <div className=\"text-center\">\n          <h5 className=\"\n          text-xl\n          font-semibold\n          mb-2\"\n          >\n            {yourRecipe.strArea}\n          </h5>\n\n          <div\n            className=\"\n            mb-4\n            h-36\n            overflow-hidden\n            overflow-ellipsis\"\n          >\n            {yourRecipe.strInstructions}\n          </div>\n\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { MyRecipe } from '../types/recipe';\nimport { MyRecipeCard } from './MyRecipeCard';\n\ntype Props = {\n  yourRecipes: MyRecipe[],\n};\n\nexport const ListOfMyRecipes: React.FC<Props> = ({ yourRecipes }) => {\n  return (\n    <>\n      <h1\n        className=\"\n          text-center\n          pt-10\n          text-3xl\"\n      >\n        My recipes:\n      </h1>\n      <ul className=\"\n        list-none\n        flex\n        flex-wrap\n        justify-center\n        my-16\n        gap-9\"\n      >\n        {yourRecipes.map(recipe => (\n          <li\n            key={recipe.id}\n          >\n            <MyRecipeCard\n              yourRecipe={recipe}\n            />\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport {\n  Routes,\n  Route,\n  Link,\n} from 'react-router-dom';\nimport { ModalWindow } from './ModalWindow/ModalWindow';\nimport { Card } from './Card/Card';\nimport { Recipe, MyRecipe } from './types/recipe';\nimport { ListOfRecipes } from './ListOfRecipes/ListOfRecipes';\n// eslint-disable-next-line import/extensions\nimport { ListOfMyRecipes } from './ListOfMyRecipes/ListOfMyRecipes';\n\nconst App: React.FC = () => {\n  // I get an array of recipes from localStorage here\n  const gotRecipes = localStorage.getItem('favourites');\n  const readRecipesStorage = () => {\n    if (gotRecipes === null) {\n      return [];\n    }\n\n    return JSON.parse(gotRecipes);\n  };\n\n  const ourRecipes = readRecipesStorage();\n\n  // I get an array of my recipes from localStorage here\n  const gotMyRecipes = localStorage.getItem('myFavourites');\n  const readMyRecipesStorage = () => {\n    if (gotMyRecipes === null) {\n      return [];\n    }\n\n    return JSON.parse(gotMyRecipes);\n  };\n\n  const yourRecipes = readMyRecipesStorage();\n\n  // Hooks\n  const [addDishStatus, setAddDishStatus] = useState(false);\n  const [recipes, setRecipes] = useState<Recipe[]>(ourRecipes);\n  const [myRecipes, setMyRecipes] = useState<MyRecipe[]>(yourRecipes);\n\n  // Other functions\n  const handleClose = () => setAddDishStatus(false);\n  const addRecipe = (recipe: Recipe) => {\n    if (recipes.find(el => +el.idMeal === +recipe.idMeal)) {\n      return;\n    }\n\n    setRecipes([...recipes, recipe]);\n    localStorage.setItem('favourites', JSON.stringify([...recipes, recipe]));\n  };\n\n  const addMyRecipe = (myRec: MyRecipe) => {\n    setMyRecipes([...myRecipes, myRec]);\n    localStorage.setItem('myFavourites', JSON.stringify([...myRecipes, myRec]));\n  };\n\n  return (\n    <>\n      <header>\n        <nav\n          className=\"\n            bg-gray-200\n            h-auto\n            flex\n            sm:flex-col\n            sm:items-center\n            md:flex-row\n            md:justify-center\n          \"\n        >\n          <Link\n            to=\"/\"\n            className=\"\n            flex\n            justify-center\n            bg-gray-100\n            sm:w-52\n            md:mx-3\n            sm:my-4\n            bg-white\n            hover:bg-gray-200\n            text-gray-800\n            font-semibold\n            py-2\n            px-4\n            border\n            border-gray-400\n            rounded\n            shadow\"\n          >\n            Random dish\n          </Link>\n          <Link\n            to=\"/favourites\"\n            className=\"\n            flex\n            justify-center\n            sm:w-52\n            md:mx-3\n            md:my-4\n            bg-white\n            hover:bg-gray-100\n            text-gray-800\n            font-semibold\n            py-2\n            px-4\n            border\n            border-gray-400\n            rounded\n            shadow\"\n          >\n            Favourites\n          </Link>\n          <Link\n            to=\"/my_favourites\"\n            className=\"\n            flex\n            justify-center\n            sm:w-52\n            sm:mt-4\n            md:m-0\n            md:mx-3\n            bg-white\n            hover:bg-gray-100\n            text-gray-800\n            font-semibold\n            py-2\n            px-4\n            border\n            border-gray-400\n            rounded\n            shadow\"\n          >\n            My Recipes\n          </Link>\n          <button\n            type=\"button\"\n            className=\"\n            bg-gray-400\n            sm:w-52\n            md:mx-3\n            sm:my-4\n            bg-white\n            hover:bg-gray-200\n            text-gray-800\n            font-semibold\n            py-2\n            px-4\n            border\n            border-gray-400\n            rounded\n            shadow\"\n            onClick={() => setAddDishStatus(!addDishStatus)}\n          >\n            Add custom dish\n          </button>\n        </nav>\n\n        <Routes>\n          <Route path=\"/\" element={<Card addRecipe={addRecipe} recipes={ourRecipes} />} />\n          <Route path=\"/favourites\" element={<ListOfRecipes ourRecipes={ourRecipes} />} />\n          <Route path=\"/my_favourites\" element={<ListOfMyRecipes yourRecipes={yourRecipes} />} />\n        </Routes>\n      </header>\n\n      <ModalWindow\n        addDishStatus={addDishStatus}\n        closeWindow={handleClose}\n        addMyRecipe={addMyRecipe}\n      />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}